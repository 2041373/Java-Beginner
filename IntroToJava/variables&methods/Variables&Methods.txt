Variables and Methods 

Variables 
    What is a variable? 
       - a date container that saves the data you wish to use in your code 
       - a variable in code has the same defintion of a variable in real life, something that has value but is changeable 

Method 
    What is a method? 
        - a method is a way of doing something 
        - In code, a method is a way to streamline a repeated process 
            - for e.g if i was to have a few instances of multiplication in my code, rather than writing the code for mulitplication every time i need to, i can just create a method like this mulitply(int x, int y) and within that method, have a multiplication of x and y 

Java Variables

A variable is a container that holds the value while the Java program is executed. A variable is assigned with a data type. When we talk about Variables in Java, we refer to a data container that stores the values ​​during the execution of the Java program. Inside this container, each variable is assigned a data type that works to designate the type and amount of value that each variable can contain.

The variable is a name of a memory location. There are three types of variables in Java: local, instance, and static.

There are two types of data types in Java: primitive and non-primitive.

Types of Variables

There are three types of variables in Java:

1. local variable
2. instance variable
3. static variable

1) Local Variable

A variable declared inside the body of the method is called a local variable. You can use this variable only within that method and the other methods in the class aren’t even aware that the variable exists.

A local variable cannot be defined with a “static” keyword.

2) Instance Variable

A variable declared inside the class but outside the body of the method is called an instance variable. It is not declared as static.

It is called an instance variable because its value is instance-specific and is not shared among instances.

3) Static variable

A variable that is declared as static is called a static variable. It cannot be local. You can create a single copy of the static variable and share it among all the instances of the class. Memory allocation for static variables happens only once when the class is loaded in the memory.

Example:

public class A
{
    static int m=100;//static variable
    void method()
    {
        int n=90;//local variable
    }
    public static void main(String args[])
    {
        int data=50;//instance variable
    }
}//end of class


Methods In JAVA

In Java, a method is a block of code that performs a specific task. Methods are defined in a class, and they are invoked by creating an instance of the class. Methods are used to perform certain actions on objects. They are also used to determine the behavior of an object. In other words, they specify how an object should behave in certain situations. There are two types of methods in Java: static and non-static. Static methods can be invoked without creating an instance of the class. Non-static methods must be invoked from an instance of the class. Methods can have arguments and return values. Arguments are values that are passed to the method when it is invoked. Return values are values that are returned by the method after it has been executed.

Example

public class Main {
  static void myMethod() {
    // code to be executed
  }
}
Call a Method:

To call method in Java. We write name of method in Parentheses () and a semicolon ;

Example

public class Main {
  static void myMethod() {
    System.out.println("I just got executed!");
  }

  public static void main(String[] args) {
    myMethod();
  }
}

// Outputs "I just got executed!"
A lesson around variables and methods.

Variables are a means of referencing

Method are actions